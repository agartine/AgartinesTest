{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "DatalakeVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "{{ vpc_base }}.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [{
          "Key": "Name",
          "Value": "datalake-{{ datalake_name }}"
        }]
      }
    },
    "sgOpenVPNAccessServer": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for OpenVPN Access Server (HVM) version 2.0.24 provided by OpenVPN Technologies, Inc.",
        "VpcId": {
          "Ref": "DatalakeVPC"
        }
      }
    },
    "rtbPublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        }
      }
    },
    "routePublicIGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPublic"
        },
        "GatewayId": {
          "Ref": "IGWdatalake"
        }
      }
    },
    "rtbAssocMasterA":{
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref": "rtbPublic"},
        "SubnetId" : { "Ref": "subnetMasterA"}
      }
    },
    "rtbAssocMasterB":{
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref": "rtbPublic"},
        "SubnetId" : { "Ref": "subnetMasterB"}
      }
    },
    "rtbPrivateA": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        }
      }
    },
    "rtbAssocInternalA":{
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref": "rtbPrivateA"},
        "SubnetId" : { "Ref": "subnetDirectoryA"}
      }
    },
    "rtbPrivateB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        }
      }
    },
    "rtbAssocInternalB":{
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref": "rtbPrivateB"},
        "SubnetId" : { "Ref": "subnetDirectoryB"}
      }
    },    
    "sgOpenVpnIngress1194": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgOpenVPNAccessServer"
        },
        "IpProtocol": "udp",
        "FromPort": "1194",
        "ToPort": "1194",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgOpenVpnIngress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgOpenVPNAccessServer"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgOpenVpnIngress943": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgOpenVPNAccessServer"
        },
        "IpProtocol": "tcp",
        "FromPort": "943",
        "ToPort": "943",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgOpenVpnIngress443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgOpenVPNAccessServer"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgEgressOpenVpnAllowAll": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgOpenVPNAccessServer"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "subnetMasterA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "{{ vpc_base }}.1.0/28",
        "AvailabilityZone": "us-west-2a",
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "vpicu-master-a"
        }]
      }
    },
    "subnetMasterB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "{{ vpc_base }}.1.16/28",
        "AvailabilityZone": "us-west-2b",
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "vpicu-master-b"
        }]
      }
    },
    "IGWdatalake": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "NatIPa": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NatIPb": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eipVpnA": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "ec2vpnMasterA",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eipVpnB": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "ec2vpnMasterB",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "assocVpnA": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "eipVpnA",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "ec2vpnMasterA"
        }
      }
    },
    "assocVpnB": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "eipVpnB",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "ec2vpnMasterB"
        }
      }
    },
    "dnsDatalakeVpnAvpicunet": {
      "Type": "AWS::Route53::RecordSetGroup",
      "DependsOn": "eipVpnA",
      "Properties": {
        "HostedZoneName": "vpicu.net.",
        "RecordSets": [
          {
            "Name": "{{ datalake_name }}-vpn-a.vpicu.net.",
            "Type": "A",
            "TTL": "300",
            "ResourceRecords": [
              {
                "Ref": "eipVpnA"
              }
            ]
          }
        ]
      }
    },
    "dnsDatalakeVpnBvpicunet": {
      "Type": "AWS::Route53::RecordSetGroup",
      "DependsOn": "eipVpnA",
      "Properties": {
        "HostedZoneName": "vpicu.net.",
        "RecordSets": [
          {
            "Name": "{{ datalake_name }}-vpn-b.vpicu.net.",
            "Type": "A",
            "TTL": "300",
            "ResourceRecords": [
              {
                "Ref": "eipVpnB"
              }
            ]
          }
        ]
      }
    },
    "AclDefaultDeny": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "DefaultDeny"
        }]
      }
    },
    "AclMasterAccess": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "MasterAccess"
        }]
      }
    },
    "acleMasterInbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "{{ vpc_base }}.1.0/27",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "AclMasterAccess"
        }
      }
    },
    "acleMasterOutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "AclMasterAccess"
        }
      }
    },     
    "AclPublicDMZ": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "PublicDMZ"
        }]
      }
    },
    "aclePublicDMZAllInbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "AclPublicDMZ"
        }
      }
    },
    "aclePublicDMZAllOutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "AclPublicDMZ"
        }
      }
    },      
    "ec2vpnMasterA": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-15809b74",
        "InstanceType": "t2.micro",
        "KeyName": "{{ vpn_key_name }}",
        "Monitoring": "false",
        "Tags": [{
          "Key": "Name",
          "Value": "{{ datalake_name }}-vpn-a"
        }, {
          "Key": "Role",
          "Value": "OpenVpnServerPrimary"
        }],
        "NetworkInterfaces": [{
          "DeleteOnTermination": "true",
          "Description": "Primary network interface",
          "DeviceIndex": 0,
          "SubnetId": {
            "Ref": "subnetMasterA"
          },
          "PrivateIpAddresses": [{
            "PrivateIpAddress": "{{ vpc_base }}.1.5",
            "Primary": "true"
          }],
          "GroupSet": [{"Ref": "sgOpenVPNAccessServer"}],
          "AssociatePublicIpAddress": "true"
        }]
      }
    },
    "ec2vpnMasterB": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-15809b74",
        "InstanceType": "t2.micro",
        "KeyName": "{{ vpn_key_name }}",
        "Monitoring": "false",
        "Tags": [{
          "Key": "Name",
          "Value": "{{ datalake_name }}-vpn-b"
        }, {
          "Key": "Role",
          "Value": "OpenVpnServerSecondary"
        }],
        "NetworkInterfaces": [{
          "DeleteOnTermination": "true",
          "Description": "Primary network interface",
          "DeviceIndex": 0,
          "SubnetId": {
            "Ref": "subnetMasterB"
          },
          "PrivateIpAddresses": [{
            "PrivateIpAddress": "{{ vpc_base }}.1.20",
            "Primary": "true"
          }],
          "GroupSet": [{"Ref": "sgOpenVPNAccessServer"}],
          "AssociatePublicIpAddress": "true"
        }]
      }
    },
    "ec2certificatAuthority": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "{{ ec2_ca_ami }}",
        "InstanceType": "t2.micro",
        "KeyName": "{{ ca_key_name }}",
        "Monitoring": "false",
        "Tags": [{
          "Key": "Name",
          "Value": "{{ datalake_name }}-cert-authority"
        }],
        "NetworkInterfaces": [{
          "DeleteOnTermination": "true",
          "Description": "Primary network interface",
          "DeviceIndex": 0,
          "SubnetId": {
            "Ref": "subnetDirectoryA"
          },
          "PrivateIpAddresses": [{
            "PrivateIpAddress": "{{ vpc_base }}.20.8",
            "Primary": "true"
          }],
          "GroupSet": [{"Ref": "sgSshOnly"}],
          "AssociatePublicIpAddress": "false"
        }]
      }
    },
    "sgSshOnly": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "allows SSH access from anywhere",
        "VpcId": {
          "Ref": "DatalakeVPC"
        }
      }
    },
    "sgSshIngress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSshOnly"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sgSshEgressAllowAll": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSshOnly"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "IGWattachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "InternetGatewayId": {
          "Ref": "IGWdatalake"
        }
      }
    },
    "subnetDirectoryA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "{{ vpc_base }}.20.0/28",
        "AvailabilityZone": "us-west-2a",
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "directory-a"
        }]
      }
    },
    "subnetDirectoryB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "{{ vpc_base }}.20.16/28",
        "AvailabilityZone": "us-west-2b",
        "VpcId": {
          "Ref": "DatalakeVPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "directory-b"
        }]
      }
    },
    "EC2SNAAdmzMasterA": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "AclPublicDMZ"
        },
        "SubnetId": {
          "Ref": "subnetMasterA"
        }
      }
    },
    "EC2SNAAdmzMasterB": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "AclPublicDMZ"
        },
        "SubnetId": {
          "Ref": "subnetMasterB"
        }
      }
    },
    "EC2SNAAmasterAccessDirectoryA": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "AclMasterAccess"
        },
        "SubnetId": {
          "Ref": "subnetDirectoryA"
        }
      }
    },
    "EC2SNAAmasterAccessDirectoryB": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "AclMasterAccess"
        },
        "SubnetId": {
          "Ref": "subnetDirectoryB"
        }
      }
    },
    "NatGatewayA": {
      "Type": "AWS::EC2::NatGateway",
      "DependsOn": "IGWattachment",      
      "Properties": {
        "SubnetId": {
          "Ref": "subnetMasterA"
        },
        "AllocationId": {
          "Fn::GetAtt": ["NatIPa", "AllocationId"]
        }
      }
    },
    "routeNatInternalA":{
      "Type": "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref": "rtbPrivateA"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId" : { "Ref": "NatGatewayA"}
      }
    },
    "NatGatewayB": {
      "Type": "AWS::EC2::NatGateway",
      "DependsOn": "IGWattachment",      
      "Properties": {
        "SubnetId": {
          "Ref": "subnetMasterB"
        },
        "AllocationId": {
          "Fn::GetAtt": ["NatIPb", "AllocationId"]
        }
      }
    },
    "routeNatInternalB":{
      "Type": "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref": "rtbPrivateB"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId" : { "Ref": "NatGatewayB"}
      }
    }
  },
  "Outputs": {
    "VPC": {
      "Value": {
        "Ref": "DatalakeVPC"
      },
      "Description": "VPC ID"
    },
    "RouteTableInternalNatA": { 
      "Value" : {
        "Ref" : "rtbPrivateA"
      },
      "Description" : "Route table for internal subnets in AZ-A to access internet"
    },
    "RouteTableInternalNatB": { 
      "Value" : {
        "Ref" : "rtbPrivateB"
      },
      "Description" : "Route table for internal subnets in AZ-B to access internet"
    }
  },
  "Description": "Datalake VPC Foundation"
}